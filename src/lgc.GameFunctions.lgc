[ ********************************************************************[[ lgc.GameFunctions: Game-specific functions[[ You should use this logic to perform any game specific functions, [ such as counting down timers, etc and processing player input [ related to the game (such as examining/using inventory items) and [ any other things that arerequired in several rooms that you don't[ want to duplicate in each room.[[ This logic is called from logic 0, on every cycle, unless [ disableGameFunctions is set.[[ Sierra did not use a separate logic for all this - they just did it[ all from logic 0. I find it is neater this way, as you can keep your[ game specific processing separate from other system-related things[ (although these may require some modification for your game). Also,[ this makes logic 0 easier to manage.[[ ********************************************************************[#define entryDelay v240[ *************************************************[ put all non-input functions that are not[ room-specific here[ *************************************************[ if a new room was visited for first time[if (!egoExplored && currentRoom != rm2.auditorium.21) [ {  [ if ego has been in the room long enough, award one score point for  [ exploration[  if (elapsedSeconds != oldSeconds)[    {    [ increment delay counter until ~2 seconds has passed [   entryDelay += 1; [   if (entryDelay == 2)  [    { [     print("You have explored a new room in this world! Good job!"); [     currentScore += 1;[      set(egoExplored);[      entryDelay = 0; [     }[    }[  }    [ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player has provided input and match not yet found,[ do said testsif (haveInput && !haveMatch)  {  [ put all generic said tests (those that apply in all rooms) here    [ if player says any dirty words  if ((said("bad word", "rol") ||        said("anyword", "bad word", "rol") ||        said("anyword", "anyword", "bad word", "rol") ||        said("anyword", "anyword", "anyword", "bad word", "rol") ||        said("anyword", "anyword", "anyword", "anyword", "bad word", "rol") ||        said("anyword", "anyword", "anyword", "anyword", "anyword", "bad word", "rol")))     {    ++badWordCount;    if (badWordCount == 1)       {      [ first warning      print("A mind is a terrible thing to waste.");      }    if (badWordCount == 2)       {      [ second warning      print("I am going to tell on you!");      }    if (badWordCount == 3)       {      [third warning      print("Don't say anymore words like that!");      }    if (badWordCount == 4)       {      [ no more warnings      print("Don't say I didn't warn you.");      quit(1);      }    }    [ look cube  if (said("look", "cube"))     {    if (has("strange colored cube"))       {      show.obj(Inv.TestItem);      }    else       {      print("You don't have it.");      }    }    [ look anything  if ((said("look", "anyword") || said("look", "anyword", "rol")))     {    random(0,2,rndNum);    if (rndNum == 0) {     print("You look, and it returns your stare, unimpressed.");     }    if (rndNum == 1) {     print("You are visually unimpressed");     }    if (rndNum == 2) {     print("You look at it, but nothing strikes your fancy.");     }    }         [ get anything  if ((said("get", "anyword") || said("get", "anyword", "rol")))     {    random (0,2,rndNum);    if (rndNum == 0) {     print("You can't get that here!");     }    if (rndNum == 1) {     print("You summon the ability to leave it alone.");     }    if (rndNum == 2) {     word.to.string(s1,w2);     print("Your keen detective's mind asks you if you really need the %s1, and your rational self just as quickly reasons that you don't.");     }    }    [ use anything  if ((said("use", "anyword") || said("use", "anyword", "rol")))     {    random (0,4,rndNum);    if (rndNum == 0) {     print("What do you want me to do with it?");     }    if (rndNum == 1) {     print("Nothing happens.");     }    if (rndNum == 2) {     print("Don't mess with it. We don't know where you've been");     }    if (rndNum == 3) {     print("Don't pick at it; you'll only make it worse.");     }    if (rndNum == 4) {     print("Nothing happens.");     print("See, most games would just give you a generic response when you try something useless like that. But we've custom-tailored this response exactly for you!");     }    }      [ talk to anything  if ((said("talk", "anyword") || said("talk", "anyword", "rol")))     {    random (0,1,rndNum);    if (rndNum == 0) {     print("It doesn't make a stunning conversationalist.");     }    if (rndNum == 1) {     print("You'd better not. Something might answer.");     }    } [ smell anything  if ((said("smell", "anyword") || said("smell", "anyword", "rol")))     {    random (0,1,rndNum);    if (rndNum == 0) {     print("It smells almost as good as it looks.");     }    if (rndNum == 1) {     print("Like most things in Paris, there is a pleasing odiferous melange of ancient tobacco and modern industrial fumes.");     }    }     [ taste anything  if ((said("eat", "anyword") || said("eat", "anyword", "rol")))     {    random (0,2,rndNum);    if (rndNum == 0) {     print("\"I'm not going to put my lips on that!\"");     }    if (rndNum == 1) {     print("Walking around licking things isn't usually the way a police inspector inspects.");     }    if (rndNum == 2) {     print("It tastes almost as good as it smells.");     }    }      }  :donereturn();[ **************************************[ MESSAGES[ **************************************#message 1 "I am going to tell on you!"#message 2 "Don't say anymore words like that!"#message 3 "Don't say I didn't warn you."#message 4 "You don't have it."#message 5 "What? Where?"#message 6 "You can't get that here!"#message 7 "What do you want me to do with it?"#message 8 "You have explored a new room in this world! Good job!"#message 9 "The cube is too interesting; you decide to keep it."#message 10 "There's no need to do anything with the cube."